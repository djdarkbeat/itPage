<?Lassoscript// Last modified 11/12/09 by ECL, Landmann InterActive// CHANGE NOTES// 1/11/08// Recoded for LI CMS v 3.0// 2/19/08// Added a check to see if page template exists// Fixed a problem with a redirect to the home page when Quicksearch returned no records// 12/4/08// Modified to allow video content// 12/23/08// Finishing video content addition// 1/15/09// Added new datatype "Story"// 6/6/09// Issue #677, change logic so if there is no medium photo defined,// but there IS a media file defined, then put the video in the place of the main photo// 7/6/09// Convert all fields to vars for use in Output CTs// 7/20/09// Change query for default page to HeirarchySlug="home" // 8/25/09// Added new stylesheet field// 8/27/09// Adding 28 pixels to $VideoHeight to allow for controller. Fixes a distortion problem.// 11/12/09 - Thanks Tim Taplin// Fixed bad SQL query for default home record, replaced c.HeirarchySlug with h.HeirarchySlug// TESTING//	   http://www.landmanninteractive.com/devel/video/detailVideo.lasso?ID=128// Debugging// Var:'svDebug' = 'Y';If: $svDebug == 'Y';	'<p class="debug"><strong>'(Include_CurrentPath)'</strong><br>\n';/If;// Convert Action_ParamsIf: (Action_Param:'ID') != '';	Var:'vID' = (Action_Param:'ID');/If;If: (Action_Param:'New') != '';	Var:'vNew' = (Action_Param:'New');/If;If: (Action_Param:'SearchType') != '';	Var:'vSearchType' = (Action_Param:'SearchType');/If;If: (Action_Param:'QuickSearchFor') != '';	Var:'QuickSearchFor' = (Action_Param:'QuickSearchFor');/If;Debug;	'vID = ' (Var:'vID') '<br>\n';	'vHeirarchyID = ' (Var:'vHeirarchyID') '<br>\n';	'vRootID = ' (Var:'vRootID') '<br>\n';	'IsRoot = ' (Var:'IsRoot') '<br>\n';	'vError = ' ($vError) '<br>\n';	'vOption = ' ($vOption) '<br>\n';	'SearchType = ' (Var:'vSearchType') '<br>\n';	'QuickSearchFor = ' (Var:'QuickSearchFor') '<br>\n';/Debug;// QUICKSEARCH// If request came from Quicksearch form, create a special query that checks lots of fieldsIf: (Var:'vSearchType') == 'QS';	// Include the code for building the search params phrase	Include:($svLibsPath)'searchparamscontent_build.inc';	If: (Var:'QuickSearchFor') != '';		Var:'SQLGetContent' = '/* 43 build_detail - $SQLGetContent - Quicksearch Request *//* Searching Content Table */SELECT	C.ID AS ContentID,	C.HeirarchyID,	H.name AS HeirarchyName,	Headline AS Field1,	Subhead AS Field2,	Author AS Field3,	Text_1 AS Field4,	Text_2 AS Field5,	C.DateModifiedFROM '$svContentTable' AS CINNER JOIN '$svHeirarchyTable' AS H ON C.HeirarchyID = H.IDWHERE (	Headline LIKE "%' $QuickSearchFor '%" OR	Subhead LIKE "%' $QuickSearchFor '%" OR	Author LIKE "%' $QuickSearchFor '%" OR	Text_1 LIKE "%' $QuickSearchFor '%" OR	Text_2 LIKE "%' $QuickSearchFor '%")AND C.Active = "Y";';	// Nothing entered in Quicksearch box, just search content table	Else;		Var:'SQLGetContent' = '/* 67 build_detail - $SQLGetContent - Quicksearch Request *//* Searching Content Table */SELECT	C.ID AS ContentID,	C.HeirarchyID,	H.name AS HeirarchyName,	Headline AS Field1,	Subhead AS Field2,	Author AS Field3,	Text_1 AS Field4,	Text_2 AS Field5,	C.DateModifiedFROM '$svContentTable' AS CINNER JOIN '$svHeirarchyTable' AS H ON C.HeirarchyID = H.IDWHERE C.Active = "Y";';	/If;// Not a Quicksearch form (in other words, a normal page)Else;	// If ID passed, use that to get record	If: (Var:'vID') != '';		Var:'SQLGetContent' = '/* 90 build_detail - $SQLGetContent */		/* SELECT Record by ID */		SELECT * FROM '$svSiteDatabase'.'$svContentTable' WHERE ID="' $vID '" AND Active="Y" LIMIT 1';	// Otherwise use Heirarchy ID for section page	Else: (Var:'vHeirarchyID') != '';		Var:'SQLGetContent' = '/* 99 build_detail - $SQLGetContent */		/* SELECT Default Heirarchy Record */		SELECT *, c.id AS ContentID, h.ID as HeirarchyID		FROM  '$svSiteDatabase'.'$svContentTable' AS c		LEFT JOIN  ' $svHeirarchyTable ' AS h		ON h.id = c.HeirarchyID		WHERE HeirarchyID = ' $vHeirarchyID ' AND c.Active = "Y"		LIMIT 1';	// If no ID or HeirarchyID passed, get the home page	Else;		Var:'SQLGetContent' = '/* 109 build_detail - $SQLGetContent */		/* SELECT Default Home Record */		SELECT *, c.id AS ContentID, h.ID as HeirarchyID		FROM  '$svSiteDatabase'.'$svContentTable' AS c		LEFT JOIN  ' $svHeirarchyTable ' AS h		ON h.id = c.HeirarchyID		WHERE h.HeirarchySlug = "home" AND c.Active = "Y"		LIMIT 1';	/If;/If;// Initialize content vars// $FinalContent is the main content var that is called in template// $SecondContent is the right-column content var that is called in the template// It is used for the Text_2 fieldVar:'FinalContent' = (string);Var:'SecondContent' = (string);Var:'MediaContent' = (string);$FinalContent += '\n';$SecondContent += '\n';Inline: $IV_Content, -SQL=$SQLGetContent;	// If Found_Count = 0, dump out error 2000 "No Records Found"	If: (Var:'vSearchType') != 'QS' && (Found_Count) == 0;		Var:'vError' = '2000';		$FinalContent = (LI_ShowError3: -ErrNum=(Var:'vError'), -Option=(Var:'vOption'));			If: $svDebug == 'Y';				Server_Push: $__HTML_REPLY__;			Else;				// CLEAN URLs				// Redirect_URL: 'http://'($svDomain)'/home?Error=5020';				// CMS 3.0				Redirect_URL: 'http://'($svDomain)'/home';			/If;	Else;				// ******************* QUICKSEARCH *******************		// Process QuickSearch pages differently than "normal" pages		If: (Var:'vSearchType') == 'QS';			// Grab the page-specific fields for header and templates, and override $svSys vars			// USE DEFAULT			// Grab the Portfolio Group			// NOT USED ON QUICKSEARCH PAGES			Var:'vPortfolioGroupID' = null;				Debug;				'105: vHeirarchyID = ' (Var:'vHeirarchyID') '<br>\n';				'105: SQLGetContent = ' ($SQLGetContent) '<br>\n';				'105: Found_Count = ' (Found_Count) '<br>\n';				'105: Error_CurrentError = ' (Error_CurrentError) '<br>\n';				'105: vError = ' ($vError) '<br>\n';				'105: vOption = ' ($vOption) '<br>\n';			/Debug;			$FinalContent += '\t\t<div class="QSContainerHead">\n';			$FinalContent += '\t\t\t<div class="QSSearchedForHead">Search Results</div>\n';			$FinalContent += '\t\t\t<div class="QSSearchedFor"><strong>You searched for:</strong> '(Var:'QuickSearchFor')'</div>\n';			$FinalContent += '\t\t\t<div class="QSFoundCount">Found <strong>' (Found_Count) '</strong> records.</div>\n';			$FinalContent += '\t\t\t<hr align="left">\n';			$FinalContent += '\t\t</div>\n';			$FinalContent += '\t\t<div class="QSContainerResults">\n';			// Display records only if Found_Count > 0. This is necessary to avoid Quicksearch searches finding nothing not displaying			If: (Found_Count) > 0;				Records;						// Field1					$FinalContent += ('\t\t\t<div class="QSHead">'(Field:'HeirarchyName')'</div>\n');					$FinalContent += ('\t\t\t<a href="detail.lasso?ID='(Field:'ContentID')'" class="QSLink">'(Field:'Field1')'</a> <span class="QSDate">'(Field:'DateModified')'</span>\n');						// Field2					// Not displaying Field2						// Field3					If: (Field:'Field3') != '';						$FinalContent += ('\t\t\t<div class="QSAuthor">'(Field:'Field3')'</div>\n');					/If;						// Field 4					// Strip HTML markup so text only appears					Local:'ThisFieldRaw' = (LI_StringRemoveHTML:(Field:'Field4'));					Local:'ThisFieldTruncated' = (String_Extract: -startposition=1, -endposition=150, ($ThisFieldRaw));						If:(String_Length:$ThisFieldTruncated) >> 150;							$ThisFieldTruncated += '.&nbsp;.&nbsp;.&nbsp;';						/If;						$FinalContent += ('\t\t\t<div class="QSText1">'(#ThisFieldTruncated)'</div>\n');						// Field 5					If: (Field:'Field5') != '';						// Strip HTML markup so text only appears						Local:'ThisFieldRaw' = (LI_StringRemoveHTML:(Field:'Field5'));						Local:'ThisFieldTruncated' = (String_Extract: -startposition=1, -endposition=150, ($ThisFieldRaw));							If:(String_Length:$ThisFieldTruncated) >> 150;								$ThisFieldTruncated += '.&nbsp;.&nbsp;.&nbsp;';							/If;						$FinalContent += ('\t\t\t<div class="QSText2">'(#ThisFieldTruncated)'</div>\n');					/If;						$FinalContent += '\t\t\t<br>\n';					/Records;			/If;			$FinalContent += '\t\t</div>\n';		// ******************* NORMAL *******************		// NOT a Quicksearch page (in other words, a normal page)		Else;				// Grab the page-specific fields for header and templates, and override $svSys vars			Var:'vPageKeywords' = (Field:'PageKeywords');			Var:'vPageAuthor' = (Field:'PageAuthor');			Var:'vPageDescription' = (Field:'PageDescription');			Var:'vPageCopyright' = (Field:'PageCopyright');			Var:'vPageTitle' = (Field:'PageTitle');			Var:'vPageTemplate' = (Field:'PageTemplate');			Var:'vPageStylesheet' = (Field:'PageStylesheet');			Var:'vTestimonial' = (Field:'Testimonial');			Var:'vStory' = (Field:'Story');			Var:'vHeadline' = (Field:'Headline');			// This var is a special-case situation.			// It is used to avoid conflict with last $vHeadline when called in the OutputHeadline CT			// It is not used anywhere else.			Var:'vContentHeadline' = (Field:'Headline');			Var:'vImage_Large' = (Field:'Image_Large');			Var:'vImage_Med' = (Field:'Image_Med');			Var:'vImage_Thumb' = (Field:'Image_Thumb');			Var:'vImage_Title' = (Field:'Image_Title');			Var:'vImage_Caption' = (Field:'Image_Caption');			Var:'vSubhead' = (Field:'Subhead');			Var:'vAuthor' = (Field:'Author');			Var:'vDateModified' = (Field:'DateModified');			Var:'vURL' = (Field:'URL');			Var:'vText_1' = (Field:'Text_1');			Var:'vText_2' = (Field:'Text_2');			Var:'vPrice_1' = (Field:'Price_1');			Var:'vPrice_2' = (Field:'Price_2');				// Grab the Portfolio Group			Var:'vPortfolioGroupID' = (Field:'PortfolioGroupID');			// Grab the Gallery Group			Var:'vGalleryGroupID' = (Field:'GalleryGroupID');				Debug;				'50: vHeirarchyID = ' (Var:'vHeirarchyID') '<br>\n';//				'105: url_path = ' ($url_path) '<br>\n';				'105: vHeirarchyID = ' ($vHeirarchyID) '<br>\n';				'105: New = ' (Var:'vNew') '<br>\n';				'105: vPortfolioGroupID = ' ($vPortfolioGroupID) '<br>\n';				'105: vGalleryGroupID = ' ($vGalleryGroupID) '<br>\n';				'105: vID = ' ($vID) '<br>\n';				'105: SQLGetContent = ' ($SQLGetContent) '<br>\n';				'105: Found_Count = ' (Found_Count) '<br>\n';				'105: vError = ' ($vError) '<br>\n';				'105: vOption = ' ($vOption) '<br>\n';			/Debug;				// Define header variables - Override $sv with page-based variables			If: $vPageKeywords != '';				$svSys_Keywords = $vPageKeywords;			/If;			If: $vPageAuthor != '';				$svSys_Author = $vPageAuthor;			/If;			If: $vPageDescription != '';				$svSys_Description = $vPageDescription;			/If;			If: $vPageCopyright != '';				$svSys_Copyright = $vPageCopyright;			/If;			If: $vPageTitle != '';				$svSys_Title = $vPageTitle;			/If;			If: $vPageTemplate != '';				// Check to see if template exists. If it does not, don't overwrite the $svSys_DefaultTemplate				Var:'TemplateExists' = (File_Exists:($svTmpltsPath)($vPageTemplate));				// '254: TemplateExists = ' ($TemplateExists) '<br>\n';				If: $TemplateExists == true;					$svSys_DefaultTemplate = $vPageTemplate;				/If;			/If;			If: $vPageStylesheet != '';				// Check to see if stylesheet exists. If it does not, don't overwrite the $svSys_DefaultStylesheet				Var:'StylesheetExists' = (File_Exists:($svCSSPath)($vPageStylesheet));				// '254: StylesheetExists = ' ($StylesheetExists) '<br>\n';				If: $StylesheetExists == true;					$svSys_DefaultStylesheet = $vPageStylesheet;				/If;			/If;				$FinalContent += '\n';			// Media files (Video and Audio)			// Build this first, then check to see if there is a main image			// If no main image, then use $MediaContent in its place			If: (Field:'Media_File') != '';							// TESTING				// Var:'ThisMediaFile' = 'ChristmasTreeFireVideo_gA8.flv';				Var:'ThisMediaFile' = (Field:'Media_File');								// Have to stuff this into a var otherwise it prints out on the page. $JunkMediaVar is not actually used for anything else.				Var:'JunkMediaVar' = (LI_MediaGetInfo: -Filepath=($ThisMediaFile));				// Handle a .flv file				If: $ThisMediaFile->EndsWith('flv');					Var:'VideoWidth' = ($VideoInfoMap->(Find:'width'));					Var:'VideoHeightTEMP' = (Integer($VideoInfoMap->(Find:'height')));					// Add 28 pixels for controller					Var:'VideoHeight' =  (Math_Add:($VideoHeightTEMP),28);					Var:'VideoDimensions' = ($VideoInfoMap->(Find:'dimensions'));					// Var:'VideoFPS' = ($VideoInfoMap->(Find:'fps'));					Var:'VideoDuration' = ($VideoInfoMap->(Find:'duration'));					// Adding VideoFilename to get around problem with LI_CMSatend.lasso not finding $ThisMediaFile					Var:'VideoFilename' = ($ThisMediaFile);						$MediaContent += '\t\t\t<!-- Video Placeholder -->\n';					$MediaContent += '\t\t\t<div id="VideoPlaceholder"></div>\n';					$MediaContent += '\t\t\t<div class="ContentPanel">\n';					$MediaContent += '\t\t\t<p class="text_12_black"><span class="ghost">'($ThisMediaFile)'</span></p>\n';					$MediaContent += '\t\t\t</div>\n';				// Handle a .swf file				Else: $ThisMediaFile->EndsWith('swf');					Var('VideoWidth' = $SWFInfo->Find('SWFWidth'));					Var('VideoHeight' = $SWFInfo->Find('SWFHeight'));					// Include the .swf object/embed HTML					Include(($svIncludesPath)('build_swfHTML.inc'));					// Output the .swf HTML					$MediaContent += $swfHTML;								/If;			/If;			If: $svHeadlineActive == 'Y' && ($vHeadline) != '';				$FinalContent += '\t\t\t<div class="ContentPanelHead">'($vHeadline)'</div>\n';			/If;			If: $svSubheadActive == 'Y' && ($vSubhead) != '';				$FinalContent += '\t\t\t<div class="ContentPanelSubhead">'($vSubhead)'</div>\n';			/If;			If: $svAuthorActive == 'Y' && ($vAuthor) != '';				$FinalContent += '\t\t\t<div class="ContentPanelAuthor">'($vAuthor)'</div>\n';			/If;			$FinalContent += '\t\t\t<div class="ContentPanelDate">'($vDateModified)'</div>\n';			If: $svURLActive == 'Y' && ($vURL) != '';				$FinalContent += '\t\t\t<div class="ContentPanelURL"><a href="'($vURL)'" target="_blank" class="ContentPanel">'($vURL)'</a></div><br>\n';			/If;			// Main image			If: $vImage_med != '';				$FinalContent += '\t\t\t<div class="ContentPanelImage">';				If: $vImage_large != '';					$FinalContent += '<a href="'($svImagesLrgPath)($vImage_large)'" target="_blank">';				/if;				$FinalContent += '<img src="'($svImagesMdPath)($vImage_med)'" hspace="5" alt="'($vImage_med)'">';				If: ($vImage_large) != '';					$FinalContent += '</a>';				/if;				$FinalContent += '</div>\n\t\t\t<div class="ContentPanelCaption">'($vImage_Caption)'</div>\n';				// Output the media file				$FinalContent += $MediaContent;			// No main image, check to see if video is defined. If it is, then output it			Else;				// Output the media file				$FinalContent += $MediaContent;			/If;  // Main image			// Text 1 field			If: $svText1Active == 'Y' && ($vText_1) != '';				$FinalContent += '\t\t\t<div class="ContentPanel">'(Output:$vText_1,-EncodeNone)'</div>\n';			/If;			// Text 2 field			If: $svText2Active == 'Y' && ($vText_2) != '';				$SecondContent += '\t\t\t<div class="SecondContentPanel">'(Output:$vText_2,-EncodeNone)'</div><br>\n';			/If;		/If;		// $vSearchType = QuickSearch	/If;/Inline;Debug;	'202: ThisMediaFile = ' (Var:'ThisMediaFile') '<br>\n';	'202: VideoInfoMap = ' (Var:'VideoInfoMap') '<br>\n';	'202: VideoWidth = ' (Var:'VideoWidth') '<br>\n';	'202: VideoHeight = ' (Var:'VideoHeight') '<br>\n';	'202: VideoDimensions = ' (Var:'VideoDimensions') '<br>\n';//	'202: VideoFPS = ' (Var:'VideoFPS') '<br>\n';	'202: VideoDuration = ' (Var:'VideoDuration') '<br>\n';	'202: vError = ' ($vError) '<br>\n';	'202: vOption = ' ($vOption) '<br>\n';/Debug;?>